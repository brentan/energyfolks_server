<h2>energyfolks integration documentation</h2>
<p>Please also remember to check out the <a href='examples.php'>integration examples</a>.  All examples include fully commented code, and
most are less than 3 lines of total code to implement.</p>
<h4>WordPress Plugin</h4>
<p>Looking for the energyfolks wordpress plugin?  <a href='wordpress'>Find the documentation here</a>.  The wordpress plugin integrates energyfolks and eliminates the need to directly call the javascript functions on this page.</p>

<h4>contents</h4>
    <ul>
        <li><a href='#css'>Styling the EnergyFolks Library</a>
        <li><a href='#library'>The EnergyFolks Javascript Library</a>
        <ul>
            <li><a href='#objectvars'>Public Properties</a>
            <li><a href='#objectvars2'>Read-Only Properties</a>
        </ul>
        <li><a href='#objectmethod'>Data Display Properties and Methods</a>
        <li><a href='#widgets'>Widgets Method</a>
        <li><a href='#comment'>EnergyFolks Comments Properties and Methods</a>
        <li><a href='#login'>Logins to Energyfolks</a></li>
    </ul>


      <h2><a name="css"></a>Styling the EnergyFolks library</h2>
        <p><b><i>Important: You are highly encouraged to include a CSS stylesheet on your pages to customize the style of energyfolks content.  A default sheet can be loaded directly in your <Code>head</Code> section from <a href='<%= SITE_HOST %>/assets/EnergyFolks.css'><%= SITE_HOST %>/assets/EnergyFolks.css</a></i></b></p>
        <p>The EnergyFolks library uses occasional inline-styles throughout its many displays to obtain a desired look (by setting element positioning, padding, and other options).  Colors, font choices, and other styles are not set inline, and flow from your set of CSS styles.  All of your pages that show any energyfolks content should load a stylesheet for proper display, and we recommend our default stylesheet.  Custom stylesheets can be loaded instead as well, and the default stylesheet can be used as a template for your custom CSS file.  <b>Regardless of customizations, it is still recommended that you load the EnergyFolks.css file from our servers in your head section <i>before</i> loading your custom file</b>.  This will ensure that any future styles added to the platform reach your users and requires you to only define styles that differ from our defaults in your css files. (Note: any customizations you have in your files will take precedence over the default styles if you load your custom file after the default file in your header).</p>

      <h2><a name="library"></a>
      The EnergyFolks Javascript Library</h2>
        <p>The EnergyFolks library is available for download or inclusion into your site at: <a href='<%= SITE_HOST %>/assets/EnergyFolks.js'><%= SITE_HOST %>/assets/EnergyFolks.js</a>.  We recommend loading the library directly from energyfolks servers (instead of storing a copy locally on your server) as any bug fixes or updates will automatically flow to your userbase.  You should also include this library on evert page (energyfolks emails will send users to your site for actions, and if the library is not loaded on those pages, such as the homepage, actions will fail).  For proper display, be sure to include either the default energyfolks css file (<a href='#css'>described above</a>) or your own custom file.</p>
        <p>The library includes a version of JQuery for its operation.  To avoid conflicts with other JQuery installations or other javascript libraries that utilize the '$' namepsace, JQuery is mapped to <code>EnergyFolks.$</code> in the Energyfolks library.</p>
        <p>All methods and properties are accessed from the <Code>EnergyFolks</code> namespace.  For example, the <code>LoginBox</code> method is called with <code>EnergyFolks.LoginBox()</code>.</p>
        <h3><a name="objectvars"></a>Addressable Properties</h3>
        <p>These global properties are used library-wide and can be overwritten to customize library operation.  For example, the accent color can be customized by adding <code>EnergyFolks.color = 'AABBCC';</code> to your page in a javascript tag.</p>
        <table summary="class Map - Properties" width="90%">
          <tbody>
            <tr>
              <th>Property</th>
                  <th>Type</th>
              <th>Description</th>
            </tr>
                <tr class="odd">
                  <td><code>id</code></td>
                  <td><code>number</code></td>
                  <td>A unique id number that identifies the affiliate group that should be associated with this request.  If you do not know your group id, email <a href='mailto:contact@energyfolks.com'>contact@energyfolks.com</a>.</td>
                </tr>
              <tr class="odd">
                <td><code>color</code></td>
                <td><code>string</code></td>
                <td>A hexadecimal color code representing the color scheme to be used.  Defaults to <code>F16522</code> (Blue).  Note that if an id is set, this will automatically be set to the affiliate color set in the energyfolks database.</td>
              </tr>
          </tbody>
        </table>

        <h3><a name="objectvars2"></a>Read-Only Properties</h3>
        <p>These properties are set by the library and can be read site-wide to access information.  Note that these parameters <i>can</i> be overwritten, but doing so may cause unexpected behavior.</p>
        <table summary="class Map - Properties" width="90%">
        <tbody>
        <tr>
          <th>Property</th>
          <th>Type</th>
          <th>Description</th>
        </tr>
        </tr>
        <tr class="odd">
          <td><code>user_logged_in</code></td>
          <td><code>boolean</code></td>
          <td>Boolean, whether the user is logged in or not.  Note that this is 'false' at page load, and is set after page load by a script that pings energyfolks for user information.</td>
        </tr>
        <tr class="odd">
          <td><code>current_user</code></td>
          <td><code>json</code></td>
          <td>Hash of information related to the current user, such as name, company, affiliations, and administrator rights.</td>
        </tr>
        </table>


    <h2><a name="objectmethod"></a>Data Display Properties and Methods</h2>
        <p>The data display functions allow you to embed large energyfolks data windows on your page.  You can show jobs, events, discussions, and other data types in a variety of styles and with a pre-set filters to limit results.</p>
        <h3>Properties</h3>
        <table summary="class Map - Properties" width="90%">
          <tbody>
          <tr>
            <th>Property</th>
            <th>Type</th>
            <th>Description</th>
          </tr>
          <tr class="odd">
            <td><code>per_page</code></td>
            <td><code>boolean</code></td>
            <td>The number of items to show per page for data views.</td>
          </tr>
          <tr class="odd">
            <td><code>get_moderated</code></td>
            <td><code>string</code></td>
            <td>If true, data displays will load items needing moderation.</td>
          </tr>
          <tr class="odd">
            <td><code>get_my_posts</code></td>
            <td><code>number</code></td>
            <td>If true, data displays will load post authored by the current user.</td>
          </tr>
          <tr class="odd">
            <td><code>source_restrict</code></td>
            <td><code>number</code></td>
            <td>Used to restrict data views to either posts originating from the network (set with <code>id</code>), or highlighted by the network.  Values are:<ul>
              <li>
                <code>EnergyFolks.ANY_POST</code>: All posts (or all users in this network)
              </li>
              <li>
                <code>EnergyFolks.AFFILIATE_ONLY</code>: From network
              </li>
              <li>
                <code>EnergyFolks.HIGHLIGHTED_ONLY</code>: Highlighted by network
              </li>
            </ul></td>
          </tr>
          <tr class="odd">
            <td><code>map_location_lat</code></td>
            <td><code>number</code></td>
            <td>Latitude to search around.  Used in conjunction with <Code>map_location_lng, map_location_radius, map_location_name</Code></td>
          </tr>
          <tr class="odd">
            <td><code>map_location_lng</code></td>
            <td><code>number</code></td>
            <td>Longitude to search around.  Used in conjunction with <Code>map_location_lat, map_location_radius, map_location_name</Code></td>
          </tr>
          <tr class="odd">
            <td><code>map_location_radius</code></td>
            <td><code>number</code></td>
            <td>Radius (miles) to search around the lat/lng coordinates.  Used in conjunction with <Code>map_location_lng, map_location_lat, map_location_name</Code>. 0 disables location search.</td>
          </tr>
          <tr class="odd">
            <td><code>map_location_name</code></td>
            <td><code>number</code></td>
            <td>Name of location the search is being conducted around.  Used in conjunction with <Code>map_location_lng, map_location_radius, map_location_lat</Code></td>
          </tr>
          <tr class="odd">
            <td><code>search_terms</code></td>
            <td><code>string</code></td>
            <td>String to search for when retrieving data for view.  Defaults to nothing (no search).</td>
          </tr>
          </tbody>
        </table>
        <h3>Methods</h3>
        <table summary="class Map - Methods" width="90%">
          <tbody>
            <tr>
              <th>Methods</th>
                  <th>Return&nbsp;Value</th>
              <th>Description</th>
            </tr>
              <tr class="odd">
                <td><code>Sidebar()</code></td>
                <td><code>none</code></td>
                <td>Will create the energyfolks sidebar wherever it is called on a page.  Should only be used once per page.</td>
              </tr><tr class="odd">
                <td><code>showPage( parameters:hash)</code></td>
                <td><code>none</code></td>
                <td>
                  Creates energyfolks data view.  The input hash should have the following options:
                  <ul>
                    <li>
                      <code>source</code>: the type of data to load.  Allowed values are:<ul>
                      <li><code>events</code>: Events Calendar
                      <li><code>jobs</code>: The jobs database
                      <li><code>users</code>: the membership database
                      <li><code>blogs</code>: the blog database (other group submitted blogs)
                      <li><code>discussions</code>: the discussion threads
                      </ul>
                    </li>
                    <li>
                      <code>format</code>: the view to show the data in.  Allowed values are:<ul>
                      <li><code>list</code>: list view (default)
                      <li><code>month</code>: Calendar view (not valid with users)
                      <li><code>map</code>: map view (not valid with discussions)
                      <li><code>stream</code>: stream (full text) view (only with discussions and blogs)
                      </ul>
                    </li>
                  </ul>
                </td>
              </tr>
          </tbody>
        </table>

      <h2><a name="widgets"></a>
      EnergyFolks Widgets</h2>
        <p>Widgets are a different way to display EnergyFolks data in a compact manner</p>
        <h3>Methods</h3>
        <table summary="class Map - Methods" width="90%">
          <tbody>
            <tr>
              <th>Methods</th>
                  <th>Return&nbsp;Value</th>
              <th>Description</th>
            </tr>
            <tr class="odd">
              <td><code>showWidget( parameters:hash )</code></td>
              <td><code>none</code></td>
              <td>
                Outputs an energyfolks widget that shows energyfolks information in a compact, vertical list.  Multiple widgets can be used per page.  Input parameters are:
                <ul>
                  <li><code>source: </code> required, the datatype to load.  Allowed values are:<ul>
                    <li><code>events</code>: Events Calendar
                    <li><code>jobs</code>: The jobs database
                    <li><code>blogs</code>: the blog database (other group submitted blogs)
                    <li><code>discussions</code>: the discussion threads
                  </ul></li>
                  <li>[<code>title</code>]: Title to show at the top of the box.  Use '' to hide a title.  Otherwise one is generated based on <Code>source</Code></li>
                  <li>[<code>items</code>]: the number of items to show in the view (default 5)</li>
                  <li>[<code>item_height</code>]: the height, in pixels, of each item (default 35)</li>
                  <li>[<code>latitude</code>]: latitude to search around (default is affiliate location)</li>
                  <li>[<code>longitude</code>]: longitude to search around (default is affiliate location)</li>
                  <li>[<code>radius</code>]: radius (miles) around lat/lng to search (0 for no limit, default is affiliate chosen value)</li>
                  <li>[<code>terms</code>]: words to search for (default '')</li>
                  <li>[<code>tags</code>]: comma seperated list of tags to limit view to (default '')</li>
                  <li>[<code>affiliate_only</code>]: when set to true, will limit to items from this affiliate (Set by <code>EnergyFolks.id</code>).  Default false.</li>
                  <li>[<code>highlighted_only</code>]: when set to true, will limit to items highlighted by this affiliate (Set by <code>EnergyFolks.id</code>).  Default false.</li>
                </ul>
              </td>
            </tr>
          </tbody>
        </table>

      <h2><a name="comment"></a>
      The EnergyFolks Comments Library</h2>
        <p>The EnergyFolks Comments library is used to add an energyfolks comment stream to a page.  This is useful for blog entries or any other page where you want to enable user comments: by using this library, users will be able to comment using their energyfolks account and subscribe to comments and replies to the thread.</p>
        <h3>Properties</h3>
        <table summary="class Map - Properties" width="90%">
          <tbody>
          <tr>
            <th>Property</th>
            <th>Type</th>
            <th>Description</th>
          </tr>
          <tr class="odd">
            <td><code>max_comment_before_collapse</code></td>
            <td><code>string</code></td>
            <td>For comment streams, the maximum number of comments to show before hiding the rest.</td>
          </tr>
          <tr class="odd">
            <td><code>max_replies_before_collapse</code></td>
            <td><code>boolean</code></td>
            <td>For replies in comments, the maximum number of replies to show before hiding the rest.</td>
          </tr>
          </tbody>
        </table>
        <h3><a name="commentmethod"></a>Methods</h3>
        <table summary="class Map - Methods" width="90%">
          <tbody>
            <tr>
              <th>Functions</th>
                  <th>Return&nbsp;Value</th>
              <th>Description</th>
            </tr><tr class="odd">
              <td><code>Comments(title:string, [hash:string])</code></td>
              <td><code>none</code></td>
              <td>Places a commenting box on the page where this is called.  Input is a title that is used to identify the page/item this comment box corresponds to, and the second optional parameter is a unique hash or ID that identifies this box.  You can create multiple boxes on the same page, and any boxes on the same page or different pages that share the same hash will display the same comment stream.  If the hash is not provided, the page URL is used as the hash.</td>
            </tr><tr class="odd">
              <td><code>Comments_HTML(title:string, [hash:string], [md5:boolean])</code></td>
              <td><code>string</code></td>
              <td>Same as <code>Comments</code>, but instead of outputting to the document, it returns the HTML to create the box.  Includes an optional third parameter which when set will stop the library from taking an MD5 of the hash based on the <code>EnergyFolks.id</code>.  This is used when comment boxes will be shared accross groups or domains.</td>
            </tr>
          </tbody>
        </table>
   <h2><a name='login'></a>Logins to EnergyFolks</h2>
<p>
<b>Two Login scenarios are possible with the javascript library:</b><ul>
<li>Client-Side (default): The external site/server never knows any information about the state of the visiting user.  All interactions
    are taken care of by the energyfolks servers, and as a result the external site does not know whether the visitor is
    logged in, a member, etc.  Any embedded energyfolks content on the site, however, will be displayed based on the logged status of the current user.  This is appropriate for most sites that do not need server-side knowledge of a user for scripting or other purposes.</li>
<li>Server Side: the external site server communicates directly with the energyfolks server, allowing the
  external site to learn the logged state of the visitor.  This allows the site to taylor displays to the user, show
  specific information based on status, etc.  This requires server side scripting functionality, and is the functionality
  used by the energyfolks wordpress plugin.  See the <code>callbackURL</code> property for information on setting server side logins up.
  </li>
 </ul>
</p>
<p>Logins are handled directly by the energyfolks library, and no methods need to be called to log a user in.  Server-side functionality requires setting some EnergyFolks properties.</p>
<h3>Properties</h3>
<table summary="class Map - Properties" width="90%">
  <tbody>
  <tr>
    <th>Property</th>
    <th>Type</th>
    <th>Description</th>
  </tr>
  <tr class="odd">
    <td><code>forwardto</code></td>
    <td><code>string</code></td>
    <td>Upon a successful login, the user will be forwarded to this URL.  If not provided, the page is simply reloaded.</td>
  </tr>
  <tr class="odd">
    <td><code>forceLogin</code></td>
    <td><code>number</code></td>
    <td>Forces the system to ping energyfolks for user information and execute the login callback.  This is used for systems that need server authentication, as it will force energyfolks to return user information if the server does not know the logged state of the user.  When using server-side logins, this should be set to 'true' whenever the server does not know the logged state of the user.</td>
  </tr>
  <tr class="odd">
    <td><code>callbackURL</code></td>
    <td><code>string</code></td>
    <td>
      Used to enable server-side logins.  Input is a URL that is called when a successful energyfolks login occurs.  This URL is passed a 'hash' parameter as a get request.  The server location should then pass this hash parameter to energyfolks via this url: <code><%= SITE_HOST %>/users/from_hash?hash=RETURNED_HASH&aid=AFFILIATE_ID&secret=SECRET</code>
      <BR><BR>
      The secret is generated from the shared secret your application has with energyfolks.  It is an MD5 hash of the secret concatenated with the hash parameter.  Upon a successful request, the server will return a JSON encoded array with user information, including id, first_name, last_name, and other information.
      <BR><BR>
      This function requires your application to be registered with energyfolks and to share a secret key.  To register, please <a href="mailto:contact@energyfolks.com">email us</a>.
    </td>
  </tr>
  </tbody>
</table>
<h3>Methods</h3>

<table summary="class Map - Methods" width="90%">
  <tbody>
  <tr>
    <th>Methods</th>
    <th>Return&nbsp;Value</th>
    <th>Description</th>
  </tr>
  <tr class="odd">
    <td><code>LoginBox([element_id])</code></td>
    <td><code>none</code></td>
    <td>Creates a large login box for a user, or shows user profile information if user is already logged in.
      Default behavior is to display information on the page where this function is called.  If an <code>element_id</code> is provided, the output will be inserted into the body of the element with the id specified.</td>
  </tr>
  <tr class="odd">
    <td><code>SmallLoginBox([element_id])</code></td>
    <td><code>none</code></td>
    <td>Creates a small login box for a user, or shows user profile information if user is already logged in.
      Default behavior is to display information on the page where this function is called.  If an <code>element_id</code> is provided, the output will be inserted into the body of the element with the id specified.</td>
  </tr>
  <tr class="odd">
    <td><code>LoginLinks([element_id])</code></td>
    <td><code>none</code></td>
    <td>Creates login links (2 links: 'get an account' and 'login') for a user, or shows links to 'edit profile' and 'logout' if already logged in.
      Default behavior is to display information on the page where this function is called.  If an <code>element_id</code> is provided, the output will be inserted into the body of the element with the id specified.</td>
  </tr>
  </tbody>
</table>

